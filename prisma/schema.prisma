datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  trainings Training[]
  weight WeightMeasurement[]
  bodyMeasurments BodyMeasurement[]
  kcalMeasurments KcalMeasurement[]
}

model KcalMeasurement {
  id        String   @id @default(uuid())
  kcal      Int
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model BodyMeasurement {
  id        String   @id @default(uuid())
  neck    Int?
  chest   Int?
  waist   Int?
  hips    Int?
  thigh   Int?
  biceps Int?
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model WeightMeasurement {
  id        String   @id @default(uuid())
  weight    Int
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Training {
  id            String         @id @default(uuid())
  label         String         @db.VarChar(255)
  exercises     Exercise[]
  trainingUnits TrainingUnit[]
  userId        String
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model TrainingUnit {
  id         String     @id @default(uuid())
  label      String     @db.VarChar(255)
  exercises  Exercise[]
  createdAt  DateTime
  endedAt    DateTime
  trainingId String
  Training   Training?  @relation(fields: [trainingId], references: [id], onDelete: Cascade)
  userId     String
}

model Exercise {
  id             String        @id @default(uuid())
  label          String        @db.VarChar(255)
  sets           Int           @default(3)
  reps           Int           @default(3)
  weight         Int           @default(12)
  training       Training?      @relation(fields: [trainingId], references: [id], onDelete: Cascade)
  trainingId     String
  trainingUnit   TrainingUnit? @relation(fields: [trainingUnitId], references: [id], onDelete: Cascade)
  trainingUnitId String?
}
